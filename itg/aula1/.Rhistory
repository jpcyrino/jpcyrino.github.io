silabas <- readRDS("C:/Users/lazza/OneDrive/github/curso_inferencia_basica/Aula 4/silabas.rds")
se <- qnorm(.975)*(sd(silabas)/sqrt(878))
sd(silabas)
c(mean(silabas)-se, mean(silabas)+se)
mean(silabas)
install.packages(LibraryDemos)
install.packages(TeachingDemos)
install.packages("TeachingDemos")
library(TeachingDemos)
z.test(silabas)
t.test(silabas)
str(t.test(silabas))
str(t.test(silabas))$conf.int
t.test(silabas)$conf.int
n <- rnorm(2000)
ggplot(n, aes(x=n))
plot(density(n))
norm
plot(norm)
plot(norm())
dnorm(seq(-4,4,100))
seq(-1,1,100)
seq(-1,1,length=100)
dnorm(seq(-4,4,length=100))
plot(dnorm(seq(-4,4,length=100)))
plot(density(dnorm(seq(-4,4,length=100))))
x <- seq(-4,4,length=100)
hx <- dnorm(x)
plot(x,hx)
lines(x,hx)
lines(x,hx)
lines(x,hx)
plot()
plot(x)
plot(x,hx,type="l")
pop <- rnorm(5000, mean=7.2,sd=3.8)
plot(pop)
hist(pop)
max(pop)
sample(pop,300,replace=TRUE)
samps <- replicate(100,mean(sample(pop,300,replace=TRUE)))
mean(samps)
mean(pop)
lines(sample(pop,300,replace=TRUE))
lines(seq(min(pop),max(pop),length=300),sample(pop,300,replace=TRUE))
hist(sample(pop,300,replace=TRUE))
hist(samps)
plot(density(samps))
dbinom
x <- seq(1,10,length=10)
x
x <- seq(0,10,length=11)
x <- seq(0,10,length=11)
x
hx <- dbinom(x,11,prob=1/6)
hx
hx <- dbinom(x,11,prob=1/2)
hx
plot(x,hx,type="l")
mean(hx)
x <- seq(1,10,length=10)
hx <- dbinom(x,10,prob=1/2)
plot(x,hx,type="l")
sum(hx)
TRUE or FALSE
TRUE
TRUE | FALSE
permutations
gtools
library(gtools)
permutations(n=2,r=2,v=c(TRUE,FALSE))
permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.alloed=TRUE)
permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=3,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=2,r=3,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=2,r=4,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t <- permutations(n=2,r=4,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t[1]
t[,1
]
t[,1] | t[,2] & !(t[,3] & t[,4])
t[,1] | !t[,2]
isTRUE(c(TRUE,TRUE))
isTRUE(c(TRUE,FALSE))
isTRUE(TRUE)
all(c(TRUE,TRUE))
all(c(TRUE,FALSE))
all(c(FALSE,FALSE))
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowd=TRUE)
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t
colnames(t) <- c("p","q")
t
t.p
t$p
t$p
t[p]
t["p"]
t[,p]
t
t<-table(t)
t
t
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
colnames(t) <- c("p","q")
t
data.frame(t)
t<-data.frame(t)
t
t$p
t$p ^ t$q
t$p & t$q
t$p & !t$q
t$p | !t$q
!t$p | t$q
!t$p | !t$q
!(t$p | t$q)
!(t$p | t$q) & t$q
!(!(t$p | t$q) & t$q)
all(!(!(t$p | t$q) & t$q))
!TRUE
!TRUE | FALSE
!TRUE | TRUE
!FALSE | FALSE
!FALSE | TRUE
cond <- function(p,q) (!p | q)
cond(TRUE,TRUE)
cond(TRUE,FALSE)
cond(FALSE,TRUE)
setdiff(c(1,2,3),c(2,2,1))
setequal(c(1,2,3),c(2,2,1))
l <- 1:1000
sum(l[l %% 3 == 0 | l %% 5 == 0])
l[l %% 3 == 0 | l %% 5 == 0]
l <- 1:inf
l <- 1:infty
l <- 1:Inf
a <- c("a","b","c")
b <- c(1,2)
expand.grid(a,b)
expand.grid(a,a)
expand.grid(b,b)
expand.grid(a,a,a)
function(x) 2 * x
function(2) 2 * x
(function(x) 2 * x)(2)
expand.grid(a,b)[a=="a"]
expand.grid(a,b)["a"]
expand.grid(a,b)[,1]
expand.grid(a,b)[,2]
expand.grid(a,b)[expand.grid(a,b)[,1]=="a"]
expand.grid(a,b)[,1]=="a"
g <- expand.grid(a,b)
g[g[,1]=="a",2]
setwd("C:/Users/lazza/OneDrive/github/jpcyrino.github.io/itg/aula1")
cls
clr
clrscr
shell("cls")
