silabas <- readRDS("C:/Users/lazza/OneDrive/github/curso_inferencia_basica/Aula 4/silabas.rds")
se <- qnorm(.975)*(sd(silabas)/sqrt(878))
sd(silabas)
c(mean(silabas)-se, mean(silabas)+se)
mean(silabas)
install.packages(LibraryDemos)
install.packages(TeachingDemos)
install.packages("TeachingDemos")
library(TeachingDemos)
z.test(silabas)
t.test(silabas)
str(t.test(silabas))
str(t.test(silabas))$conf.int
t.test(silabas)$conf.int
n <- rnorm(2000)
ggplot(n, aes(x=n))
plot(density(n))
norm
plot(norm)
plot(norm())
dnorm(seq(-4,4,100))
seq(-1,1,100)
seq(-1,1,length=100)
dnorm(seq(-4,4,length=100))
plot(dnorm(seq(-4,4,length=100)))
plot(density(dnorm(seq(-4,4,length=100))))
x <- seq(-4,4,length=100)
hx <- dnorm(x)
plot(x,hx)
lines(x,hx)
lines(x,hx)
lines(x,hx)
plot()
plot(x)
plot(x,hx,type="l")
pop <- rnorm(5000, mean=7.2,sd=3.8)
plot(pop)
hist(pop)
max(pop)
sample(pop,300,replace=TRUE)
samps <- replicate(100,mean(sample(pop,300,replace=TRUE)))
mean(samps)
mean(pop)
lines(sample(pop,300,replace=TRUE))
lines(seq(min(pop),max(pop),length=300),sample(pop,300,replace=TRUE))
hist(sample(pop,300,replace=TRUE))
hist(samps)
plot(density(samps))
dbinom
x <- seq(1,10,length=10)
x
x <- seq(0,10,length=11)
x <- seq(0,10,length=11)
x
hx <- dbinom(x,11,prob=1/6)
hx
hx <- dbinom(x,11,prob=1/2)
hx
plot(x,hx,type="l")
mean(hx)
x <- seq(1,10,length=10)
hx <- dbinom(x,10,prob=1/2)
plot(x,hx,type="l")
sum(hx)
TRUE or FALSE
TRUE
TRUE | FALSE
permutations
gtools
library(gtools)
permutations(n=2,r=2,v=c(TRUE,FALSE))
permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.alloed=TRUE)
permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=3,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=2,r=3,v=c(TRUE,FALSE),repeats.allowed=TRUE)
permutations(n=2,r=4,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t <- permutations(n=2,r=4,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t[1]
t[,1
]
t[,1] | t[,2] & !(t[,3] & t[,4])
t[,1] | !t[,2]
isTRUE(c(TRUE,TRUE))
isTRUE(c(TRUE,FALSE))
isTRUE(TRUE)
all(c(TRUE,TRUE))
all(c(TRUE,FALSE))
all(c(FALSE,FALSE))
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowd=TRUE)
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t
colnames(t) <- c("p","q")
t
t.p
t$p
t$p
t[p]
t["p"]
t[,p]
t
t<-table(t)
t
t
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
colnames(t) <- c("p","q")
t
data.frame(t)
t<-data.frame(t)
t
t$p
t$p ^ t$q
t$p & t$q
t$p & !t$q
t$p | !t$q
!t$p | t$q
!t$p | !t$q
!(t$p | t$q)
!(t$p | t$q) & t$q
!(!(t$p | t$q) & t$q)
all(!(!(t$p | t$q) & t$q))
!TRUE
!TRUE | FALSE
!TRUE | TRUE
!FALSE | FALSE
!FALSE | TRUE
cond <- function(p,q) (!p | q)
cond(TRUE,TRUE)
cond(TRUE,FALSE)
cond(FALSE,TRUE)
library(readr)
arawete <- read_csv("github/AnalistaOcun/arawete.txt",
col_names = FALSE)
View(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
ocun.meanings(arawete)
ocun.bigrams(arawete)
ocun.matrix(arawete)
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n()) %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
m <- ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
m
m[277]
m[,277]
View(m)
m %>% pivot_wider(names_from=j, values_from=n)
rlang::last_error()
pivot_wider(m)
pivot_wider(m,names_from=j)
pivot_wider(m,values_from=n)
pivot_wider(m,names_from=j,values_from=n)
pivot_wider(m,names_from=j,values_fill=0)
pivot_wider(m,names_from=j,values_from=n)
m
m[3:]
m[3:length(m)]
m[3:length(m),]
m[-c(1,2),]
m[-c(1,2),] %>% pivot_wider(names_from=j, values_from=n,values_fill=0)
m[-c(1,2)]
m[-c(1,2,738,808)] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
m[738,]
m[-c(1,2,738,808)] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
m[-c(1,2,738,808)]
m[-c(1,2,738,808),]
m[-c(1,2,738,808),] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix(arawete)
m <- m %>% filter(i != "" | j != "")
m <- m %>% filter(i != "")
View(m)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix(arawete)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
m <- ocun.matrix.logic(arawete)
View(m)
PCA(m)
princomps(m)
princomp(m)
prcomp(m)
matrix(m)
m
princomp(m[,-1])
prcomp(m[,-1])
pca <- prcomp(m[,-1])
pca
str(pca)
summary(pca)
install.packages("factoextra")
library(factoextra)
fviz_eig(pca)
fviz_pca_ind(pca)
pca
pca[,1:10]
str(pca)
pca$x
pca$x[1]
pca$x[1,1]
pca$x[1,1:10]
pca$x[,1:10]
kmenas
kmeans
kmeans(pca$x[,1:10],6)
k<-kmeans(pca$x[,1:10],6)
str(k)
k$cluster
cbind(m,k$cluster)
l <- cbind(m,k$cluster)
View(l)
l <- cbind(m[,1],k$cluster)
kt<-kmeans(m[,-1],6)
kt$cluster
lt <- cbind(m[,1],kt$cluster)
View(lt)
kt<-kmeans(m[,-1],8)
lt <- cbind(m[,1],kt$cluster)
library(readr)
khwarshi <- read_csv("github/AnalistaOcun/khwarshi.txt",
col_names = FALSE, trim_ws = FALSE)
View(khwarshi)
K <- ocun.matrix.logic(khwarshi)
K
View(K)
k <- kmeans(K[,-1],8)
view(cbind(K[,1],k$cluster))
get_dist(K[,-1])
d <- get_dist(K[,-1])
fviz_dist(d)
fviz_nbclust(K[,-1],kmeans,method="silhouette")
fviz_nbclust(K[,-1],kmeans,method="wss")
fviz_nbclust(m[,-1],kmeans,method="wss")
install.packages("NMF")
N <- nmf(k[,-1],6)
library(NMF)
N <- nmf(k[,-1],6)
demo(NMF)
demo('NMF')
nmf
library('NMF')
nmf
NMF
nmfAlgorithm
nmf
setwd("C:/Users/lazza/OneDrive/github/jpcyrino.github.io/itg/aula3")
M <- matrix(c(0.6,0.4,0.3,0.7),nrow=2, ncol=2)
M
M <- matrix(c(0.6,0.3,0.4,0.7),nrow=2, ncol=2)
M
c(0.5,0.5) %*% M
c(0.5,0.5) %*% M^2
c(0.5,0.5) %*% (M %*% M)
c(0.5,0.5) %*% M %**% 2
install.packages("expm")
c(0.5,0.5) %*% library(expm)
M %^% 2
c(0.5,0.5) %*% M %^% 30
c(0.5,0.5) %*% (M %^% 30)
c(0.5,0.5) %*% (M %^% c(1,2,3,4,5))
c(0.5,0.5) %*% (M %^% 30)
c(0.5,0.5) %*% (M %^% 100)
c(0.5,0.5) %*% (M %^% 2)
c(0.5,0.5) %*% (M %^% 3)
c(0.5,0.5) %*% (M %^% 10)
c(0.5,0.5) %*% (M %^% 20)
c(1:100)
dbinom(c(1:6),100,1/6)
dbinom(6,100,1/6)
dbinom(1/6,100,1/6)
dbinom(1,100,1/6)
dbinom(1,6,1/6)
dbinom(100,6,1/6)
dbinom(100,100,1/6)
dbinom(c(1:100),6,1/6)
dbinom(c(1:100),100,1/6)
plot(c(1:100),dbinom(c(1:100),100,1/6),type="l")
plot(c(1:100),dbinom(c(1:100),100,0.5),type="l")
sample(c(1:6),100,replace=TRUE)
mean(sample(c(1:6),100,replace=TRUE) == 6)
mean(sample(c(1:6),100,replace=TRUE) == 2)
mean(sample(c(1:6),100,replace=TRUE) == 1)
mean(sample(c(1:6),100,replace=TRUE) == 5)
sum(sample(c(1:6),100,replace=TRUE) == 5)
plot(c(1:100),dbinom(c(1:100),100,1/6),type="l")
1/6
hist(sample(c(1:6),100,replace=TRUE))
hist(sample(c(1:6),100,replace=TRUE))
hist(sample(c(1:6),100,replace=TRUE))
hist(sample(c(1:6),100,replace=TRUE))
sd(sample(c(1:6),100,replace=TRUE) == 5)
sd(sample(c(1:6),100,replace=TRUE) == 5)
sd(sample(c(1:6),100,replace=TRUE) == 5)
sd(sample(c(1:6),100,replace=TRUE))
mean(sample(c(1:6),100,replace=TRUE))
mean(sample(c(1:6),100,replace=TRUE))
mean(sample(c(1:6),100,replace=TRUE))
mean(sample(c(1:6),100,replace=TRUE)== 3)
sample(mean(sample(c(1:6),100,replace=TRUE)== 3),100,replace = TRUE)
dbinom(2,100,0.02)
dbinom(20,100,0.02)
dbinom(3,100,0.02)
dbinom(1,100,0.02)
c(a:z)
c('a':'z')
letters
length(letters)
paste(letters)
paste(letters,collapse='')
strsplit("aaaaa")
strsplit("aaaaa",split="")
strsplit("aaaaa",split="")[-1]
strsplit("aaaaa",split="")
strsplit("aaaaa",split="")[1]
pull(strsplit("aaaaa",split=""))
pull(strsplit("aaaaa",split=""),1)
strsplit("aaaaa",split="")[1]
strsplit("aaaaa",split="")[1][1]
strsplit("aaaaa",split="")
strsplit("aaaaa",split="")[[1]]
match(0.6,M)
match(0.3,M)
"a" + "b"
paste("abac","a")
paste("abac","a",sep="")
for (i in 50) i
for (i in 1:50) i
for (i in c(1:50) i
for (i in c(1:50)) i
length(M)
length(M)-1
M[1:length(M)-1]
M[2:length(M)]
c(1,21,1,2,1,1)
match(1,c(1,21,1,2,1,1))
match.all
which(1 %in% match(1,c(1,21,1,2,1,1)))
which(1 %in% c(1,21,1,2,1,1))
which(1 %in% c(1,21,1,2,1,1))
1 %in% c(1,21,1,2,1,1)
1 %in% c(1,1,1,1,1,1)
c(1) %in% c(1,1,1,1,1,1)
c(1,1,1,1,1,1)[c(1,1,1,1,1,1) == 1]
k <- c(1,2,3,4,5,1,3,4,4,5,2,1)
k[k==4]
k<-cbind(k,k)
k[k[,1]==4]
k[k[,1]==4,]
k<- cbind(c(1,2,3,4,5,5,6,6,7),(1,1,2,2,3,3,4,4,5))
k<- cbind(c(1,2,3,4,5,5,6,6,7),(1,2,2,3,3,4,4,5))
k<- cbind(c(1,2,3,4,5,5,6,6,7),(1,2,2,3,3,4,4,5,6))
k<- cbind(c(1,2,3,4,5,5,6,6,7),c(1,2,2,3,3,4,4,5,6))
k
k[k[,1]==5,]
sample(k[,1],1)
sample(k[,1],1)
sample(k[,1],1)
sample(c(1:length(k)),1)
sample(c(1:length(k)),1)
sample(c(1:length(k)),1)
length(k)
sample(c(1:length(k[,1])),1)
length(k[,1])
length(k[,1])
sample(c(1:length(k[,1])),1)
match(5,k[,1])
match(6,k[,1])
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,2],1)
sample(k[k[,1]==5,],1)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sample(k[k[,1]==5,],2)
sub(".","","A.hora.")
gsub(".","","A.hora.")
gsub(". ","","A.hora.")
gsub(".","","A.hora.")
gsub("[.]","","A.hora.")
gsub("[.,;]","","A.hora,daverdade;")
setdiff("A.hora.",".")
