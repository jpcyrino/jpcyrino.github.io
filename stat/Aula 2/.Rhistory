all(c(TRUE,TRUE))
all(c(TRUE,FALSE))
all(c(FALSE,FALSE))
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowd=TRUE)
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
t
colnames(t) <- c("p","q")
t
t.p
t$p
t$p
t[p]
t["p"]
t[,p]
t
t<-table(t)
t
t
t <- permutations(n=2,r=2,v=c(TRUE,FALSE),repeats.allowed=TRUE)
colnames(t) <- c("p","q")
t
data.frame(t)
t<-data.frame(t)
t
t$p
t$p ^ t$q
t$p & t$q
t$p & !t$q
t$p | !t$q
!t$p | t$q
!t$p | !t$q
!(t$p | t$q)
!(t$p | t$q) & t$q
!(!(t$p | t$q) & t$q)
all(!(!(t$p | t$q) & t$q))
!TRUE
!TRUE | FALSE
!TRUE | TRUE
!FALSE | FALSE
!FALSE | TRUE
cond <- function(p,q) (!p | q)
cond(TRUE,TRUE)
cond(TRUE,FALSE)
cond(FALSE,TRUE)
library(readr)
arawete <- read_csv("github/AnalistaOcun/arawete.txt",
col_names = FALSE)
View(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
ocun.meanings(arawete)
ocun.bigrams(arawete)
ocun.matrix(arawete)
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n()) %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
m <- ocun.bigrams(arawete) %>% group_by(i,j) %>% summarise(n = n())
m
m[277]
m[,277]
View(m)
m %>% pivot_wider(names_from=j, values_from=n)
rlang::last_error()
pivot_wider(m)
pivot_wider(m,names_from=j)
pivot_wider(m,values_from=n)
pivot_wider(m,names_from=j,values_from=n)
pivot_wider(m,names_from=j,values_fill=0)
pivot_wider(m,names_from=j,values_from=n)
m
m[3:]
m[3:length(m)]
m[3:length(m),]
m[-c(1,2),]
m[-c(1,2),] %>% pivot_wider(names_from=j, values_from=n,values_fill=0)
m[-c(1,2)]
m[-c(1,2,738,808)] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
m[738,]
m[-c(1,2,738,808)] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
m[-c(1,2,738,808)]
m[-c(1,2,738,808),]
m[-c(1,2,738,808),] %>% pivot_wider(names_from=j, values_from=n, values_fill=0)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix(arawete)
m <- m %>% filter(i != "" | j != "")
m <- m %>% filter(i != "")
View(m)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix(arawete)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
source('C:/Users/lazza/OneDrive/github/AnalistaOcun/analista_ocun_r.R', echo=TRUE)
ocun.matrix.logic(arawete)
m <- ocun.matrix.logic(arawete)
View(m)
PCA(m)
princomps(m)
princomp(m)
prcomp(m)
matrix(m)
m
princomp(m[,-1])
prcomp(m[,-1])
pca <- prcomp(m[,-1])
pca
str(pca)
summary(pca)
install.packages("factoextra")
library(factoextra)
fviz_eig(pca)
fviz_pca_ind(pca)
pca
pca[,1:10]
str(pca)
pca$x
pca$x[1]
pca$x[1,1]
pca$x[1,1:10]
pca$x[,1:10]
kmenas
kmeans
kmeans(pca$x[,1:10],6)
k<-kmeans(pca$x[,1:10],6)
str(k)
k$cluster
cbind(m,k$cluster)
l <- cbind(m,k$cluster)
View(l)
l <- cbind(m[,1],k$cluster)
kt<-kmeans(m[,-1],6)
kt$cluster
lt <- cbind(m[,1],kt$cluster)
View(lt)
kt<-kmeans(m[,-1],8)
lt <- cbind(m[,1],kt$cluster)
library(readr)
khwarshi <- read_csv("github/AnalistaOcun/khwarshi.txt",
col_names = FALSE, trim_ws = FALSE)
View(khwarshi)
K <- ocun.matrix.logic(khwarshi)
K
View(K)
k <- kmeans(K[,-1],8)
view(cbind(K[,1],k$cluster))
get_dist(K[,-1])
d <- get_dist(K[,-1])
fviz_dist(d)
fviz_nbclust(K[,-1],kmeans,method="silhouette")
fviz_nbclust(K[,-1],kmeans,method="wss")
fviz_nbclust(m[,-1],kmeans,method="wss")
install.packages("NMF")
N <- nmf(k[,-1],6)
library(NMF)
N <- nmf(k[,-1],6)
demo(NMF)
demo('NMF')
nmf
library('NMF')
nmf
NMF
nmfAlgorithm
nmf
X <- c(1:10)/10
H <- sum(X*log2(X))
c(X*log2(X))
cumsum(c(X*log2(X)))
-(X*log2(X) + (1-X)*log2(1-X))
H <- -(X*log2(X) + (1-X)*log2(1-X))
plot(X,H,type="l")
plot(X,H)
X <- c(0:10)/10
X
H <- -(X*log2(X) + (1-X)*log2(1-X))
H
plot(X,H)
texto <- "A Anvisa (Agência Nacional de Vigilância Sanitária) informou nesta sexta-feira (2) ter recebido dados iniciais para análise da vacina contra Covid-19 em desenvolvimento pela empresa chinesa Sinovac em parceria com o Instituto Butantan.
O envio faz parte de um novo processo criado pela agência e que visa acelerar análises para um futuro aval à oferta do imunizante"
texto
exit
library(ggplot2)
library(dplyr)
ggplot(mtcars, aes(x=wt, y=mpg)) +
geom_point()
ggplot(mtcars, aes(x=1/wt, y=mpg)) +
geom_point()
ggplot(mtcars, aes(x=wt, y=1/mpg)) +
geom_point()
qnorm(0.15,4,1)
qnorm(0.86,4,1)
qnorm(0.85,4,1)
dnorm(c(1:10),5,1)
plot(c(1:10),dnorm(c(1:10),5,1),type="l")
seq
seq(1,10,0.1)
X <- seq(1,10,0.1)
plot(x, dnorm(X, 5,1))
plot(X, dnorm(X, 5,1))
plot(X, dnorm(X, 5,1),type="l")
pnorm()
pnorm
pnorm(.15,5,1)
pnorm(3.5,5,1)
pnorm(3.5,5,1,lower.tail=FALSE)
qnorm(.15,mean=4,sd=1)
pnorm(3.5,4,1,lower.tail=FALSE)
plot(X, dnorm(X, 4,1),type="l")
pnorm(3.5,4,1)
nomes <- ("a", "b")
nomes <- c("a", "b")
paste(nomes,sep=" ")
nomes
nomes
nomes[2]
sumt.test
c(500,450,750,600)
cel <- c(500,450,750,650)
cel <- c(500,450,700,650)
mean(cel)
sd(cel)
qt(.95,3)
qt(.95,3)*(mean(cel)/sd(cel))
qt(.95,3)*(sd(cel)/sqrt(mean(cel)))
qt(.95,3)*(sd(cel)/sqrt(4)
)
)
qt(.95,3)*(sd(cel)/sqrt(4))
dt
dt(500,3)
t.test
t.test(x,y)
t.test(500,cel)
t.test(500,mean(cel)
)
t.test(500,mean(cel))
mean(cel)
qnomr(.975)*sqrt((0.5*0.5)/100)
qnorm(.975)*sqrt((0.5*0.5)/100)
qnorm(.995)*sqrt((0.5*0.5)/100)
qnorm(.99925)*sqrt((0.5*0.5)/100)
qnorm(.99925)*sqrt((0.62*0.38)/100)
rnorm(500,0.5,0.3)
m <- rnorm(500,0.5,0.3)
prop.test
m <- 0.5
h0 <- 0.4
s  <- 0.3
n = 500
t = (m-h0)/(s/sqrt(n))
qt(1-0.5,n-1)
qt(0.5,n-1)
qt(0.5,499)
qt(0.05,499
)
qt(0.05,499)
pt(t,499,lower.tail=FALSE)
dnorm(seq(0,1,0.01),mean=0.5,sd=0.3)
plot(seq(0,1,0.01),dnorm(seq(0,1,0.01),mean=0.5,sd=0.3))
pnorm
pnorm(0.05,mean=0.5,sd=0.3,lower.tail=FALSE)
pnorm(0.4,mean=0.5,sd=0.3,lower.tail=FALSE)
pnorm(t,mean=0.5,sd=0.3,lower.tail=FALSE)
pnorm(t,mean=0.4,sd=0.3,lower.tail=FALSE)
t = (m-h0)/(s/sqrt(n))
t
qnorm(1-0.05)
pnorm(t,lower.tail=FALSE)
s = 0.03
t = (m-h0)/(s/sqrt(n))
pnorm(t,lower.tail=FALSE)
t
s = 0.3
t = (m-h0)/(s/sqrt(n))
t
qt(.05,499,lwer.tail=FALSE)
qt(.05,499,lower.tail=FALSE)
pt(t,499,lower.tail=FALSE)
t = (m-h0)/(s/sqrt(49))
t
pt(t,49,lower.tail=FALSE)
t = (m-h0)/(s/sqrt(50))
pt(t,49,lower.tail=FALSE)
qnorm(t,lower.tail=FALSE)
pnorm(t,lower.tail=FALSE)
ce
cel
mean(cel)
tc = (575,500)/(sd(cel)/sqrt(4))
tc = (575-500)/(sd(cel)/sqrt(4))
tc
pt(t,lower.tail=FALSE)
pt(t,3,lower.tail=FALSE)
zh = (1000-985)/(40/sqrt(50))
zh
pnorm(zh,lower.tail=TRUE)
pnorm(zh,lower.tail=FALSE)
zh = (985-1000)/(40/sqrt(50))
zh
pnorm(zh,lower.tail=TRUE)
pnorm(zh,lower.tail=FALSE)
zc <- (4-3)/(1/sqrt(1000))
z
zc
pnorm(zc,lower.tail=FALSE)
pnorm(0.1,mean=4,sd=1)
qnorm(0.9)
qnorm(0.95)
zc/w
zc/2
1/50
prop.test
prop.test(8,200)
prop.test(8,200,p=0.02)
prop.test(8,200,p=1/50,alternative="two-sided")
prop.test(8,200,p=1/50,alternative="two.sided")
8/200
prop.test(8,200,p=1/50,alternative="greater")
prop.test(8,200,p=1/50,alternative="two.sided")
prop.test(10,200,p=1/50,alternative="two.sided")
prop.test(3,200,p=1/50,alternative="less")
prop.test(10,200,p=1/50,alternative="greater")
prop.test(8,200,p=1/50,alternative="greater")
prop.test(3,200,p=1/50,alternative="less")
prop.test(3,200,p=1/50,alternative="two.sided")
3/200
u <- c("Maria","Santos")
d <- c("César","Rio de Janeiro")
rbind(u,d)
list("Maria",5)
u <- c("Maria","César")
d <- c(1,2)
cbind(u,d)
cbind(u,d)[2,]
class(cbind(u,d)[2,])
data.frame(u,d)
data.frame(u,d)[1,]
class(data.frame(u,d)[1,])
str(data.frame(u,d))
str(data.frame(u,as.factor(d))
)
mtcars
str(mtcars)
t.test
mean(mpg)
mean(mtcars$mpg)
t = (mean(mtcars$mpg) - 19)/(sd(mtcars$mpg)/11)
t
pt(t)
pt(t,10)
t = (mean(mtcars$mpg) - 19)/(sd(mtcars$mpg)/sqrt(11))
t
pt(t)
pt(t,10)
2 * pt(t,10)
2 * pt(t,df=10)
t
qt(.05,df=10)
qt(.025,df=10)
qt(1-.025,df=10)
t = (mean(mtcars$mpg) - 10)/(sd(mtcars$mpg)/sqrt(11))
t
qt(t,df=10)
t = (mean(mtcars$mpg) - 15)/(sd(mtcars$mpg)/sqrt(11))
qt(t,df=10)
t
qnorm(t)
t
str(mtcars)
t = (mean(mtcars$mpg) - 15)/(sd(mtcars$mpg)/sqrt(32))
t
sd(mtcars$mpg)
qt(t,df=31)
t
mean(mtcars$mpg)
t = (mean(mtcars$mpg) - 19)/(sd(mtcars$mpg)/sqrt(32))
t
qt(t,df=31)
t
pt(t,df=31)
t = (mean(mtcars$mpg) - 14)/(sd(mtcars$mpg)/sqrt(32))
pt(t,df=31)
2 * pt(t,df=31)
pt(t,df=31,lower.tail=FALSE)
2 * pt(t,df=31)
2 * pt(t,df=31,lower.tail=FALSE)
2 * pt(-t,df=31)
t = (mean(mtcars$mpg) - 19)/(sd(mtcars$mpg)/sqrt(32))
-t
2 * pt(-t,df=31)
t = (mean(mtcars$mpg) - 17)/(sd(mtcars$mpg)/sqrt(32))
2 * pt(-t,df=31)
prop.test(40,80)
rnorm(100,mean=12,sd=2)
a <- rnorm(100,mean=12,sd=2)
b <- rnorm(100,mean=11, sd=3)
b
a
t.test(a,b)
b <- rnorm(100,12,sd=1)
t.test(a,b)
z.test
z
binom.test
survey
library(MASS)
survey
str(survey)
survey$smoke
survey$Smoke
survey.freq <- table(survey$Smoke)
survey.freq
chisq.test(survey.freq, c(.4,.79,.8,.7))
chisq.test(survey.freq, c(.04,.79,.08,.07))
chisq.test(survey.freq, p=c(.04,.79,.08,.07))
chisq.test(survey.freq, p=c(.045,.795,.085,.075))
source('~/.active-rstudio-document', echo=TRUE)
A <- c("a","b")
B <- c(2,3)
expand.grid(A,B)
AxB <- expand.grid(A,B)
colnames(AxB) <- c("A","B")
AxB
expand.grid(union(A,B),B)
V <- c(TRUE, FALSE)
V
p <- TRUE
q <- TRUE
r <- TRUE
s <- FALSE
((p | q) | s)
((p | q) | s)
V <- c(TRUE, FALSE)
tab <- expand.grid(V,V)
tab
colnames(tab) <- c("p","q")
tab
tab$p & tab$q
tab[3] <- tab$p & tab$q
tab
tab[3] <- tab$p | !tab$q
tab
tab[3] <- !tab$p | tab$q
tab
se <- function(x,y) !x | y
tab[3] <- se(tab$p,tab$q)
tab
setwd("C:/Users/lazza/OneDrive/github/jpcyrino.github.io/stat/Aula 2")
setwd("C:/Users/lazza/OneDrive/github/jpcyrino.github.io/stat/Aula 2")
setwd("C:/Users/lazza/OneDrive/github/jpcyrino.github.io/stat/Aula 2")
notas <- c(3,3,4,2,5,5,5,6,6,7,8,9,8,8,8,10,5,5,6,2,2,1,3,3,4,5,7,7)
hist(notas)
mean(notas)
median(notas)
cores <- c('Azul','Azul','Rosa','Verde','Verde','Vermelho','Verde','Vermelho','Rosa','Bege')
cores
table(cores)
barplot(table(cores))
mean(notas)
mean(cores == "Azul")
mean(cores == "Verde")
sum(cores == "Azul")
sum(cores == "Rosa")
sum(cores == "Bege")
cores
table(cores)
pie(t)
pie(t)
pie(table(cores))
v <- c(0,10,40,90,120,120,120,80,30,0)
t <- c(1,2,3,4,5,6,7,8,9,10)
plot(t,v)
plot(t,v,type="l")
iptu <- c(1250,900,850,2000,340,200,1900,500,100)
renda <- c(8,6,6,9,5,3,11,8,4)
plot(renda, iptu)
cor(renda,iptu)
library(readxl)
cm <- read_excel("clause_marking.xls")
View(cm)
View(cm)
View(cm)
library(readxl)
vi <- read_excel("verb_inflection.xls")
View(vi)
View(cm)
View(vi)
table(cm)
str(cm)
table(cm$locus_marking)
barplot(table(cm$locus_marking))
str(vi)
table(vi$inflectional_categories)
barplot(table(vi$inflectional_categories))
cm
vm
vi
cm.vi <- merge(cm,vi,by="id")
View(cm.vi)
cm.vi.tudo <- merge(cm,vi,by="id",all=TRUE)
View(cm.vi.tudo)
cm.vi.definitivo <- cm.vi[,c("id","locus_marking","inflectional_categories")]
View(cm.vi.definitivo)
saveRDS(cm.vi.definitivo, file="cm_vi.rds")
cm.vi.d <- readRDS(file="cm_vi.rds")
View(cm.vi)
View(cm.vi.d)
cm.vi.d == cm.vi.definitivo
mean(m.vi.d == cm.vi.definitivo)
mean(cm.vi.d == cm.vi.definitivo)
